@model CULTMACEDONIA_v2.Models.PointEditViewModel

@{
    ViewBag.Title = @CultResources.Shared.SinglePointEdit;
    Layout = "~/Views/Shared/_MasterLayout.cshtml";
}

@section styles {
    @Styles.Render("~/bundles/dropingfiles")
}

@Html.Partial("_PageHeader")

<div id="wrap">
    <div class="container offset-top">
        <div class="row">

            <div class="col-lg-12">
                <h1 class="page-header">@CultResources.View.Monuments <small>@CultResources.View.EditActionText</small></h1>
                <ol class="breadcrumb">
                    <li><a href="/">@CultResources.View.Home</a></li>
                    <li class="active">@CultResources.View.EditActionText</li>
                    <p class="pull-right pntRditName">@Model.PointName</p>
                </ol>

            </div>
            @using (Html.BeginForm())
        {
        @Html.AntiForgeryToken()

        @Html.ValidationSummary(true)

        <div class="container col-lg-12">
            <div class="">
                @Html.HiddenFor(model => model.PointId, new { @id = "hdnPointId" })

                <!-- MainInfo -->
                <div class="panel panel-default pointMainInfo">
                    <div class="panel-body pointMainInfoPanel">
                        <div class="media row">
                            <div class="media-body mainInfo row col-lg-10">

                                <div class="col-xs-12"><label>@CultResources.View.LabelPointName</label></div>
                                <div class="col-xs-6">
                                    @Html.TextBoxFor(model => model.PointName, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.PointName)
                                </div>

                            </div>
                        </div>

                        <div class="details row col-lg-12">
                            <div class="row col-lg-12"><label for="exampleInputEmail1">@CultResources.View.ContactInfo</label></div>
                            <div class="col-lg-4 nopadd">
                                <div class="input-group input-group-sm col-md-12 nopadd">
                                    <span class="input-group-addon"><span class="glyphicon glyphicon-phone-alt"></span></span>
                                    @Html.TextBoxFor(model => model.PointPhone, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.PointPhone)

                                </div>
                            </div>
                            <div class="col-lg-4">
                                <div class="input-group input-group-sm col-md-12">
                                    <span class="input-group-addon"><span class="glyphicon glyphicon-envelope"></span></span>
                                    @Html.TextBoxFor(model => model.PointEmail, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.PointEmail)
                                </div>

                            </div>
                            <div class="col-lg-4">
                                <div class="input-group input-group-sm col-md-12">
                                    <span class="input-group-addon"><span class="glyphicon glyphicon-globe"></span></span>
                                    @Html.TextBoxFor(model => model.PointWeb, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.PointWeb)
                                </div>
                            </div>


                        </div>
                        <div class="description">
                            <div class="form-group">
                                <label for="pointdescrption">@CultResources.View.LabelPointDescription</label>
                                @Html.TextAreaFor(model => model.PointDescription, new { @cols = "80", @rows = "4", @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.PointDescription)
                            </div>
                        </div>
                        <div class="description">
                            <div class="row col-lg-12">
                                <label for="exampleInputEmail1">@CultResources.View.PlaceAndAddress</label>
                                @Html.TextBoxFor(model => model.PointPlaceNomos, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.PointPlaceNomos)
                            </div>

                            <hr />

                            <div class="row col-lg-12" role="form">
                                <div class="row col-lg-12">
                                    <div class="col-lg-6 nopadd">
                                        <div class="form-group col-lg-10 nopadd">
                                            @Html.TextBoxFor(model => model.PointAddress, new { @class = "form-control" })
                                            @Html.ValidationMessageFor(model => model.PointPlaceNomos)
                                        </div>
                                        <input type="button" value="Geocode" class="btn btn-default" name="search">
                                    </div>
                                    <div id="coords" class="col-lg-6 ">
                                        <div role="form" class="form-inline pull-right">
                                            <div class="form-group col-sm-4">
                                                @Html.TextBoxFor(model => model.PointX, new { @class = "form-control ", @readonly = true })
                                                @Html.ValidationMessageFor(model => model.PointX)
                                            </div>
                                            <div class="form-group col-sm-4">
                                                @Html.TextBoxFor(model => model.PointY, new { @class = "form-control ", @readonly = true })
                                                @Html.ValidationMessageFor(model => model.PointY)
                                            </div>
                                        </div>

                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-lg-6">
                                        <div id="gmap" style="width:500px; height:280px;" class="col-lg-6">  </div>
                                    </div>

                                    <div class="col-sm-6">

                                        <div class="table-responsive ">
                                            <table class="table table-bordered monument-properties">
                                                <tr>
                                                    <td><label>@CultResources.View.labelYear</label></td>
                                                    <td>
                                                        <div class="col-xs-6">
                                                            @Html.TextBoxFor(model => model.PointYear, new { @class = "form-control input-sm" })
                                                            @Html.ValidationMessageFor(model => model.PointYear)
                                                        </div>
                                                    </td>
                                                </tr>
                                                <tr>
                                                    <td><label>@CultResources.View.labelYearDescription</label></td>
                                                    <td>
                                                        <div class="col-xs-6">
                                                            @Html.TextBoxFor(model => model.PointYearDescription, new { @class = "form-control input-sm", @placeholder = @CultResources.View.labelYearDescription })
                                                            @Html.ValidationMessageFor(model => model.PointYearDescription)
                                                        </div>
                                                    </td>

                                                </tr>
                                                <tr>
                                                    <td><label>@CultResources.View.CategoryCaption</label></td>
                                                    <td>
                                                        <div class="col-xs-12">
                                                            @Html.DropDownList("PointCategoryId", String.Empty)
                                                            @Html.ValidationMessageFor(model => model.PointCategoryId)
                                                        </div>
                                                    </td>
                                                </tr>
                                                <tr>
                                                    <td><label>@CultResources.View.EraCaption</label></td>
                                                    <td>
                                                        <div class="col-xs-12">
                                                            @Html.DropDownList("PointEraId", String.Empty)
                                                            @Html.ValidationMessageFor(model => model.PointEraId)
                                                        </div>
                                                    </td>
                                                </tr>
                                                <tr>
                                                    <td><label>@CultResources.View.PropectionCaption</label></td>
                                                    <td>
                                                        <div class="col-xs-12">
                                                            @Html.DropDownList("PointProtectionId", String.Empty)
                                                            @Html.ValidationMessageFor(model => model.PointProtectionId)
                                                        </div>
                                                    </td>
                                                </tr>
                                                <tr>
                                                    <td><label>@CultResources.View.PropertyCaption</label></td>
                                                    <td>
                                                        <div class="col-xs-12">
                                                            @Html.DropDownList("PointPropertyId", String.Empty)
                                                            @Html.ValidationMessageFor(model => model.PointPropertyId)
                                                        </div>
                                                    </td>
                                                </tr>
                                                <tr>
                                                    <td><label>@CultResources.View.EthnologicalCaption</label></td>
                                                    <td>
                                                        <div class="col-xs-12">
                                                            @Html.DropDownList("PointEthnologicalId", String.Empty)
                                                            @Html.ValidationMessageFor(model => model.PointEthnologicalId)
                                                        </div>
                                                    </td>
                                                </tr>
                                                <tr>
                                                    <td><label>@CultResources.View.ReligionCaption</label></td>
                                                    <td>
                                                        <div class="col-xs-12">
                                                            @Html.DropDownList("PointReligionId", String.Empty)
                                                            @Html.ValidationMessageFor(model => model.PointReligionId)
                                                        </div>
                                                    </td>
                                                </tr>
                                            </table>
                                        </div>




                                    </div>
                                </div>


                            </div>

                        </div>

                    </div>
                </div>
                <!-- MainInfo Panel ends here -->


                <div id="photos" class="panel panel-default dropzone">
                    <div class="panel-body">
                        <input type="hidden" id="hdnorigPImgIds" />
                        <input type="hidden" id="hdnnewPImgIds" />
                        <input type="hidden" id="hdndelPImgIds" />

                        <div id="photosDropZone" class="dropzone">
                            @{int k = 0;}
                            @foreach (CULTMACEDONIA_v2.Models.CultMacedoniaModel.PointImage i in Model.PointImage)
                                {

                                <script type="text/javascript">
                                        $("#hdnorigPImgIds").append((('@k' == 0) ? '' : ',') + '@i.ImageId');
                                        @{k = k + 1;}
                                </script>

                                @*
                                    για τα πρώτα - original αντικειμενα εικονας προσθέτω και το imageId στο data-for
                                    attribute ώστε να μπορέσω να καθάρισω το dz-preview
                                *@


                                <div class="dz-preview dz-processing dz-image-preview pipa_@i.ImageId" data-for="@i.ImageId">
                                    <div class="dz-details">
                                        <div class="dz-filename">
                                            <span data-dz-name=""></span>
                                        </div>
                                        <div data-dz-size="" class="dz-size"><strong>44.2</strong> KB</div>
                                        <img data-dz-thumbnail="" src="@i.ImageFilePath" alt="@i.ImageTitle" width="128" height="128">
                                    </div>
                                    @*@i.ImageId*@
                                    <div class="dz-progress">
                                        <span data-dz-uploadprogress="" class="dz-upload" style="width: 100%;"></span>
                                    </div>
                                    <div class="dz-success-mark"><span>✔</span></div>
                                    <div class="dz-error-mark"><span>✘</span></div>
                                    <div class="dz-error-message">
                                        <span data-dz-errormessage=""></span>
                                    </div>
                                    <a href="javascript:undefined;" class="dz-remove">Delete Image</a>
                                </div>

                                }
                        </div>

                        @*@foreach (CULTMACEDONIA_v2.Models.CultMacedoniaModel.PointImage i in Model.PointImage)
                            {*@
                        @*<div class="col-md-@(pntImageCnt-1)">*@
                        @*<a href='@i.ImageFilePath' title='@i.ImageTitle' data-gallery="">
                                <img src="@i.ImageFilePath" alt="@i.ImageTitle" width="128" height="128" />
                            </a>
                            <input type="hidden" value="@i.ImageId" />*@
                        @*</div>*@
                        @*}*@
                    </div>
                </div>


            </div>
        </div>

        <div class="form-group">
            <div>
                <input type="submit" value="@CultResources.View.SaveChanges" class="btn btn-success" />
            </div>
        </div>

        }
        </div>
    </div>
</div>
    <!-- Modal -->
    <div class="modal fade" id="myEditModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                    <h4 class="modal-title" id="myModalLabel">@CultResources.View.EditDialogTitle</h4>
                </div>
                <div class="modal-body">
                    <p class="modal-message"></p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">@CultResources.View.DialogClose</button>
                </div>
            </div><!-- /.modal-content -->
        </div><!-- /.modal-dialog -->
    </div><!-- /.modal -->

    <!-- upload modal -->
<div class="modal fade" id="myUploadModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                <h4 class="modal-title" id="myModalLabel">@CultResources.View.UploadDialogTitle</h4>
            </div>
            <div class="modal-body">
                <p class="modal-message"></p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">@CultResources.View.DialogClose</button>
            </div>
        </div><!-- /.modal-content -->
    </div><!-- /.modal-dialog -->
</div><!-- /.modal -->
    @section Scripts {
        @*@Scripts.Render("~/bundles/jqueryval")*@
        <script src="~/Scripts/dropzone.js"></script>
        <script type="text/javascript">

            jQuery(document).ready(function () {


                $("table.monument-properties select").addClass("form-control input-sm")

                var pointx = jQuery('input[name=PointX]').val();
                jQuery('input[name=PointX]').val(pointx.replace(",", "."))

                var pointy = jQuery('input[name=PointY]').val();
                jQuery('input[name=PointY]').val(pointy.replace(",", "."))

                // var px = jQuery('input[name=PointX]').val();
                // var py = jQuery('input[name=PointY]').val();



                // Load google map
                var map = new google.maps.Map(document.getElementById("gmap"), {
                    center: new google.maps.LatLng(0, 0),
                    zoom: 3,
                    mapTypeId: google.maps.MapTypeId.ROADMAP,
                    panControl: false,
                    streetViewControl: false,
                    mapTypeControl: false
                });


                var coords = new google.maps.LatLng(
                    jQuery('input[name=PointX]').val(),
                    jQuery('input[name=PointY]').val()
                );

                map.setCenter(coords);
                map.setZoom(18);

                // Set marker also
                marker = new google.maps.Marker({
                    position: coords,
                    map: map,
                    title: jQuery('input[name=PointAddress]').val(),
                });


                jQuery('input[name=search]').click(function () {


                    var geocoder = new google.maps.Geocoder();
                    geocoder.geocode({
                        address: jQuery('input[name=PointAddress]').val(),
                        region: 'no'
                    },
                        function (results, status) {
                            if (status.toLowerCase() == 'ok') {
                                // Get center
                                var coords = new google.maps.LatLng(
                                    results[0]['geometry']['location'].lat(),
                                    results[0]['geometry']['location'].lng()
                                );

                                jQuery('input[name=PointX]').val(coords.lat().toFixed(6));
                                jQuery('input[name=PointY]').val(coords.lng().toFixed(6));



                                map.setCenter(coords);
                                map.setZoom(18);

                                // Set marker also
                                marker = new google.maps.Marker({
                                    position: coords,
                                    map: map,
                                    title: jQuery('input[name=PointAddress]').val(),
                                });

                            }
                        }
                    );
                });





                $('form').submit(function () {

                    var images = [];
                    var form = $(this).closest('form');
                    $.validator.unobtrusive.parse(form);
                    //alert('sss');

                    if (form.valid()) {

                        //alert('valid');

                        var data = form.serializeArray();

                        var px = jQuery('input[name=PointX]').val();
                        //alert(px);
                        var py = jQuery('input[name=PointY]').val();

                        //alert(py);
                        // read form data
                        var formData = {};
                        $.each(data, function (i, v) {
                            formData[v.name] = v.value;
                        });


                        // for FF and IE lat and long float values have ',' instead of '.'
                        // so replace them..
                        // detection done with bowser plugin
                        if (bowser.msie || bowser.firefox) {
                            px = px.replace(".", ",");
                            py = py.replace(".", ",");

                        }

                        // add and change values for lat and logn

                        formData["PointX"] = px;
                        formData["PointY"] = py;

                        var token = $('[name=__RequestVerificationToken]').val();

                        // append lists for point images - original, deleted, newly files

                        var todelete = $("#hdnnewPImgIds").text();

                        formData["originalImageList"] = $("#hdnorigPImgIds").text();
                        formData["toDeleteImageList"] = $("#hdndelPImgIds").text();
                        formData["toInsertImageList"] = $("#hdnnewPImgIds").text();



                        // do the request
                        $.ajax({

                            url: '@Url.Action("Edit")',
                            type: "POST",

                            data: formData,

                            success: function (result) {
                                // αν εχω success edit
                                if (result.success == true) {

                                    $("#myEditModal .modal-body p.modal-message").removeClass("alert-danger").addClass("alert alert-success").html(result.message);
                                    $("#myEditModal").modal('show');
                                    $('#myEditModal').on('hidden.bs.modal', function (event) {

                                        window.location.href = result.redirectTo;

                                    });

                                } else {

                                    $("#myEditModal .modal-body p.modal-message").addClass("alert alert-danger").html(result.message);
                                    $("#myEditModal").modal('show');
                                }


                            },
                            error: function (result) {
                                // todo on edit error

                            }


                        });

                    } else {
                        //if form is not valid
                        alert('pipa');
                    }

                    return false;

                });

            });


            // @@@@ Dropzone for edit view script here
            Dropzone.options.photosDropZone = false;

            // here we keep the pointId
            var pointId = $("#hdnPointId").val();

            // $(document).ready(function () {
            var uploadText = '@CultResources.View.DropFiles';
            var uploadfilesText = '@CultResources.View.ToUpload';
            var clickToUpload = '@CultResources.View.orclick';

            $("div#photosDropZone").dropzone({
                url: '@Url.Action("UploadFilesForEdit","Points")', // '/deploy/Points/UploadFiles'
                paramName: "files",             // The name that will be used to transfer the file
                maxFilesize: 7,                 // max size in MB per file
                maxFiles: 5,                   // max number of photos
                addRemoveLinks: true,
                dataType: 'json',


                dictDefaultMessage: '<span class="bigger-150 bolder"><span class="fa fa-play red"></span>' + uploadText + '</span> ' + uploadfilesText + ' \
                <span class="smaller-80 grey">('+ clickToUpload + ')</span> <br /> \
                <span class="fa fa-cloud-upload blue large"></span>',
                dictRemoveFile: '@CultResources.View.ImageFile',
                acceptedFiles: ".jpeg,.jpg,.png,.gif,.JPEG,.JPG,.PNG,.GIF",


                // Drop Events
                drop: function (event) {

                },
                dragstart: function (event) {

                },
                dragend: function (event) {

                },
                dragenter: function (event) {

                },
                dragover: function (event) {

                },
                dragleave: function (event) {

                },

                // before send dropozone edit form's data
                // append the pointId to formData
                sending: function (file, xhr, formData) {


                    // before sending uploadforms data we
                    // append formData object with the pointId Hidden field
                    formData.append('pointId', pointId);

                },


                // File Events
                success: function (file, response) {

                    var newImgId;
                    var ids
                    if (response.isUploaded && response.isInserted) {
                        // get the new image id
                        newImgId = response.newPointImageId;

                        // διαβαζω την τιμη του hidden field με τα imgs που εχουν προστεθει
                        ids = $("#hdnnewPImgIds").text();

                        if (ids == '')
                            $("#hdnnewPImgIds").append(newImgId);
                        else
                            $("#hdnnewPImgIds").append(',' + newImgId);

                        $("#myUploadModal .modal-body p.modal-message")
                            .removeClass("alert-danger")
                            .addClass("alert alert-success")
                            .html(response.UploadMessage +" " + response.InsertMessage);

                        $("#myUploadModal").modal('show');
                    

                    } else {
                        

                        this.removeFile(file)

                        $("#myUploadModal .modal-body p.modal-message")
                            .addClass("alert alert-danger")
                            .html(response.UploadMessage +" " + response.InsertMessage);
                        $("#myUploadModal").modal('show');


                    }

                },
                removedfile: function (file) {

                    var _ref;
                    return (_ref = file.previewElement) != null ? _ref.parentNode.removeChild(file.previewElement) : void 0;
                },
                canceled: function (file) {
                    this.removeFile(file);

                },
                error: function (file, errorMessage, xhr) {
                    //alert(errorMessage);
                }

            });

            // });


            // on removing-deleted images
            $("#photosDropZone").on('click', '.dz-remove', function () {

                var parent = $("#photosDropZone");
                var idsDeleted;


                var forImgId = $(this).parent('.dz-image-preview').data('for');
                if (forImgId != null) {

                    var elem = $("div[data-for='" + forImgId + "']");
                    if (elem != null) {

                        $(parent).children("div[data-for='" + forImgId + "']").remove();

                        idsDeleted = $("#hdndelPImgIds").text();

                        if (idsDeleted == '')
                            $("#hdndelPImgIds").append(forImgId);
                        else
                            $("#hdndelPImgIds").append(',' + forImgId);


                    }


                }
            });

        </script>
    }


